/*
 * This software is copyrighted as noted below.  It may be freely copied,
 * modified, and redistributed, provided that the copyright notice is
 * preserved on all copies.
 *
 * There is no warranty or other guarantee of fitness for this software,
 * it is provided solely "as is".  Bug reports or fixes may be sent
 * to the author, who may or may not act on them as he desires.
 *
 * You may not include this software in a program or other software product
 * without supplying the source, or without informing the end-user that the
 * source is available for no extra charge.
 *
 * If you modify this software, you should include a notice giving the
 * name of the person performing the modification, the date of modification,
 * and the reason for such modification.
 *
 * Author:      Bruno Levy
 *
 * Copyright (c) 1996, Bruno Levy.
 *
 */
/*
 *
 * gproc_i.h
 *
 */

#ifndef GPROC_I_H
#define GPROC_I_H


inline GraphicProcessor::GraphicProcessor(void)
{
  _gport = NULL;
  _proc_name = "Unknown processor";
}

inline GraphicProcessor::GraphicProcessor(GraphicPort *gp)
{
  _gport = gp;
  _proc_name = "Unknown processor";
}

inline ScrCoord GraphicProcessor::Width(void) const
{
  return _width;
}


inline ScrCoord GraphicProcessor::Height(void) const
{
  return _height;
}

inline  ColorIndex* GraphicProcessor::GraphMem(void)     const
{
  return _graph_mem;
}

inline  ColorIndex* GraphicProcessor::Colormap(void)     const
{
  return _colormap;
}

inline  ZCoord*     GraphicProcessor::ZMem(void)         const
{
  return _z_mem;
}

inline  int         GraphicProcessor::BytesPerLine(void) const
{
  return _bytes_per_line;
}


inline  int         GraphicProcessor::BitsPerPixel(void) const
{
  return _bits_per_pixel;
}

inline  int         GraphicProcessor::RedMask(void)      const
{
  return _R_mask;
}

inline  int         GraphicProcessor::GreenMask(void)    const
{
  return _G_mask;
}

inline  int         GraphicProcessor::BlueMask(void)     const
{
  return _B_mask;
}

inline  Rect&       GraphicProcessor::Clip(void)
{
  return _clip;
}

inline GraphicPort* GraphicProcessor::Port(void)
{
  return _gport;
}

#endif
